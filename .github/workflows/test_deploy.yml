name: Test kaj Deploy

on:
  push:
    branches: [ main, master, staging ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    branches: [ main, master, staging ]

jobs:
  Test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: test
          POSTGRES_USER: eventaservo
          POSTGRES_PASSWORD: eventaservo
        ports: [ '5432:5432' ]

    steps:
      - uses: actions/checkout@v2

      - name: Ruby 2.7 e Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true

      - name: Node 15
        uses: actions/setup-node@v1
        with:
          node-version: 15.x

      - name: Locate Yarns cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Yarn
        run: yarn install --frozen-lockfile

      - name: Run tests
        env:
          DB_NAME: test
          DB_HOST: localhost
          DB_USERNAME: eventaservo
          DB_PASSWORD: eventaservo
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          bin/rails db:migrate
          bin/rails test

  Deploy:
    needs: Test
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/staging' }}
    runs-on: ubuntu-latest

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx

      - name: Build and push (Production)
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          push: true
          tags: eventaservo/backend:latest
          secrets: |
            "GOOGLE_MAPS_KEY=${{ secrets.GOOGLE_MAPS_KEY }}"
            "IPINFO_KEY=${{ secrets.IPINFO_KEY }}"
          build-args: |
            AMBIENTE=production

      - name: Build and push (Staging)
        if: ${{ github.ref == 'refs/heads/staging' }}
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          push: true
          tags: eventaservo/backend:staging
          build-args: |
            AMBIENTE=staging

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
